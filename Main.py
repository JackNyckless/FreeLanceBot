import telebot
from telebot import types
import Functions, Config
import SQL
from psycopg2 import sql as sq



token = Config.token
channel = Config.channel_id
admin = Config.admin_id
invite = Config.invite_link


add_ = False
remove_ = False


bot = telebot.TeleBot(token)




def panel(chat):
    a_add = types.InlineKeyboardButton("‚úÖ –î–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è", callback_data='a_add')
    a_remove = types.InlineKeyboardButton("‚ùå –ò—Å–∫–ª—é—á–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è", callback_data='a_remove')
    a_list = types.InlineKeyboardButton("üìÉ –°–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π", callback_data='a_list')
    a_zakazs = types.InlineKeyboardButton("üìã –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤", callback_data='a_zakazs')
    markup = types.InlineKeyboardMarkup(row_width=1)
    markup.add(a_add, a_remove, a_list, a_zakazs)
    bot.send_message(chat, "*–ê–î–ú–ò–ù –ü–ê–ù–ï–õ–¨ üîß*", reply_markup=markup, parse_mode="Markdown")






@bot.message_handler(commands=['start'])
def start(message):
    conn = Functions.connect()
    cursor = conn.cursor()
    sql = "SELECT * FROM users WHERE id=" + str(message.from_user.id)
    cursor.execute(sql)
    res = cursor.fetchall()
    if res == []:
        albums = [int(message.from_user.id), None, 1]
        sql = sq.SQL('INSERT INTO users (id, type, anketa) VALUES ({})').format(
            sq.SQL(',').join(map(sq.Literal, albums)))
        cursor.execute(sql)
    conn.commit()
    conn.close()
    if message.from_user.id == admin:
        bot.send_message(message.chat.id, "_–í–∞—à –∞–∫–∫–∞—É–Ω—Ç - _*–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.*", parse_mode="Markdown")
        panel(message.chat.id)
    else:
        customer = types.InlineKeyboardButton("üë®‚Äçüíº –Ø –∫–ª–∏–µ–Ω—Ç", callback_data='customer')
        executor = types.InlineKeyboardButton("üë®‚Äçüíª –Ø –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å", callback_data='executor')
        markup = types.InlineKeyboardMarkup(row_width=2)
        markup.add(customer, executor)
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! üòÅ\n\n_–•–æ—á–µ—à—å –Ω–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä –ø–æ_ *–¥–æ—Å—Ç—É–ø–Ω–æ–π —Ü–µ–Ω–µ*, _–∞ –≥–ª–∞–≤–Ω–æ–µ_ *–±—ã—Å—Ç—Ä–æ*_? –¢–æ–≥–¥–∞ –Ω–∞—à —Å–µ—Ä–≤–∏—Å –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ! " +
                         "–ü—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞–≤—å —Å–≤–æ—ë –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∏ —Ç—Ä–æ–µ –∏–∑ –Ω–∞—à–∏—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –ø–æ–º–æ–≥—É—Ç –≤–∞–º —Å –ø–æ–∏—Å–∫–∞–º–∏._\n\n‚úÖ*–ü–µ—Ä–≤–∞—è –∑–∞—è–≤–∫–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è!*\n‚úÖ*–ü–æ–∏—Å–∫ –∑–∞–Ω–∏–º–∞–µ—Ç –¥–æ 2 –¥–Ω–µ–π!*\n‚úÖ*–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π!*",
                         parse_mode="Markdown")
        bot.send_message(message.chat.id, "*–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏, –∫—Ç–æ —Ç—ã?*", reply_markup=markup, parse_mode="Markdown")





@bot.message_handler(content_types=['text'])
def lalala(message):
    global add_, remove_
    conn = Functions.connect()
    cursor = conn.cursor()
    if message.from_user.id != admin:
        sql = "SELECT * FROM workers WHERE id=" + str(message.from_user.id)
        cursor.execute(sql)
        fff = cursor.fetchall()
        if fff != []:
            if message.text == "üìÉ –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤":
                bot.send_message(message.chat.id, Functions.zakazs(False, message.from_user.id, conn), parse_mode="Markdown")
            else:
                punct = "None"
                if Functions.info2(message.chat.id, conn) == 1: punct = "zakaz"
                if Functions.info2(message.chat.id, conn) == 2: punct = "summ"
                if Functions.info2(message.chat.id, conn) == 3: punct = "result"
                if Functions.info2(message.chat.id, conn) == 4: punct = "comment"

                if punct == "zakaz":
                    fail = False
                    zn = 0
                    try: zn = int(message.text)
                    except:
                        fail = True
                        bot.send_message(message.chat.id, "*–í–´ –í–í–ï–õ–ò –ù–ï–ö–û–†–ï–ö–¢–ù–´–ô –ù–û–ú–ï–†!*\n\n–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä.",
                                         parse_mode="Markdown")
                    if zn != 0:
                        cursor.execute("SELECT * FROM zakaz")
                        kz = len(cursor.fetchall())
                        if zn > 0 and zn < kz + 1:
                            sql = "SELECT * FROM made WHERE id="+str(message.from_user.id)+" AND zakaz=" + message.text
                            cursor.execute(sql)
                            yet = cursor.fetchall()
                            sql = "SELECT * FROM zakaz"
                            cursor.execute(sql)
                            res_ = cursor.fetchall()[0]
                            id = int(res_[0])
                            tkers = int(res_[5])
                            endrs =int(res_[6])
                            conn.commit()
                            if yet != []:
                                bot.send_message(message.chat.id,
                                                 "*–í–´ –£–ñ–ï –í–´–ü–û–õ–ù–ò–õ–ò –≠–¢–û–¢ –ó–ê–ö–ê–ó!*\n\n–í–æ–∑—å–º–∏—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–∫–∞–∑.",
                                                 parse_mode="Markdown")
                            elif endrs > 2:
                                bot.send_message(message.chat.id,
                                                 "*–≠–¢–û–¢ –ó–ê–ö–ê–ó –£–ñ–ï –í–´–ü–û–õ–ù–ò–õ–ò!*\n\n–í–æ–∑—å–º–∏—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–∫–∞–∑.",
                                                 parse_mode="Markdown")
                            elif tkers > 4:
                                bot.send_message(message.chat.id,
                                                 "*–≠–¢–û–¢ –ó–ê–ö–ê–ó –í–ó–Ø–õ–û –°–õ–ò–®–ö–û–ú –ú–ù–û–ì–û –ò–°–ü–û–õ–ù–ò–¢–ï–õ–ï–ô*\n\n–í–æ–∑—å–º–∏—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–∫–∞–∑.",
                                                 parse_mode="Markdown")
                            else:
                                sql = """
                                                                             UPDATE zakaz 
                                                                             SET takers = """ + str(tkers + 1) + """
                                                                             WHERE id = """ + str(id)
                                cursor.execute(sql)
                                conn.commit()
                                if punct != "None":
                                    sql = """
                                                    UPDATE work 
                                                    SET """ + punct + """ = '""" + str(message.text) + """' 
                                                    WHERE id = """ + str(message.from_user.id)

                                    cursor.execute(sql)
                                    conn.commit()
                                markup = types.InlineKeyboardMarkup(row_width=2)
                                if Functions.info2(message.from_user.id, conn) == "None":
                                    zakaz = types.InlineKeyboardButton("üìù –ò–∑–º–µ–Ω–∏—Ç—å –ù–û–ú–ï–† –ó–ê–ö–ê–ó–ê", callback_data='zakaz')
                                    summ = types.InlineKeyboardButton("üìù –ò–∑–º–µ–Ω–∏—Ç—å –°–£–ú–ú–£", callback_data='summ')
                                    result = types.InlineKeyboardButton("üìù –ò–∑–º–µ–Ω–∏—Ç—å –°–°–´–õ–ö–ò", callback_data='result')
                                    comment = types.InlineKeyboardButton("üìù –ò–∑–º–µ–Ω–∏—Ç—å –°–û–û–ë–©–ï–ù–ò–ï", callback_data="comment")
                                    enter2 = types.InlineKeyboardButton("üì¨ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É", callback_data="enter2")
                                    clear2 = types.InlineKeyboardButton("üóë –û—á–∏—Å—Ç–∏—Ç—å", callback_data="clear2")

                                    sql = "SELECT * FROM work WHERE id=" + str(message.from_user.id)
                                    cursor.execute(sql)
                                    anketa = cursor.fetchall()

                                    markup.add(clear2)

                                    buttons = []
                                    for punct in range(len(anketa[0]) - 1):
                                        if anketa[0][1 + punct] != "–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ":
                                            if punct == 0: buttons.append(zakaz)
                                            if punct == 1: buttons.append(summ)
                                            if punct == 2: buttons.append(result)
                                            if punct == 3: buttons.append(comment)

                                    k = 0
                                    if len(buttons) == 4: k = 5

                                    while buttons != []:
                                        if len(buttons) > 1:
                                            markup.add(buttons[0], buttons[1])
                                            buttons.remove(buttons[1])
                                            buttons.remove(buttons[0])
                                        else:
                                            markup.add(buttons[0])
                                            buttons.remove(buttons[0])

                                    if k == 5: markup.add(enter2)

                                conn.commit()
                                bot.send_message(message.chat.id, Functions.text4(Functions.info2(message.chat.id, conn), message.from_user.id, conn),
                                                 reply_markup=markup, parse_mode="Markdown")
                        else:
                            bot.send_message(message.chat.id, "*–ó–ê–ö–ê–ó–ê –° –¢–ê–ö–ò–ú –ù–û–ú–ï–†–û–ú –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢!*\n\n–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä.",
                                             parse_mode="Markdown")
                    elif zn == 0 and fail == False:
                        bot.send_message(message.chat.id,
                                         "*–ù–û–ú–ï–† –ó–ê–ö–ê–ó–ê –ù–ï –ú–û–ñ–ï–¢ –ë–´–¢–¨ –ù–£–õ–ï–í–´–ú!*\n\n–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä.",
                                         parse_mode="Markdown")
                else:
                    if punct != "None":
                        sql = """
                                            UPDATE work
                                            SET """ + punct + """ = '""" + str(message.text) + """' 
                                            WHERE id = """ + str(message.from_user.id)

                        cursor.execute(sql)
                        conn.commit()
                    markup = types.InlineKeyboardMarkup(row_width=2)
                    if Functions.info2(message.from_user.id, conn) == "None":
                        zakaz = types.InlineKeyboardButton("üìù –ò–∑–º–µ–Ω–∏—Ç—å –ù–û–ú–ï–† –ó–ê–ö–ê–ó–ê", callback_data='zakaz')
                        summ = types.InlineKeyboardButton("üìù –ò–∑–º–µ–Ω–∏—Ç—å –°–£–ú–ú–£", callback_data='summ')
                        result = types.InlineKeyboardButton("üìù –ò–∑–º–µ–Ω–∏—Ç—å –°–°–´–õ–ö–ò", callback_data='result')
                        comment = types.InlineKeyboardButton("üìù –ò–∑–º–µ–Ω–∏—Ç—å –°–û–û–ë–©–ï–ù–ò–ï", callback_data="comment")
                        enter2 = types.InlineKeyboardButton("üì¨ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É", callback_data="enter2")
                        clear2 = types.InlineKeyboardButton("üóë –û—á–∏—Å—Ç–∏—Ç—å", callback_data="clear2")

                        sql = "SELECT * FROM work WHERE id=" + str(message.from_user.id)
                        cursor.execute(sql)
                        anketa = cursor.fetchall()

                        markup.add(clear2)

                        buttons = []
                        for punct in range(len(anketa[0]) - 1):
                            if anketa[0][1 + punct] != "–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ":
                                if punct == 0: buttons.append(zakaz)
                                if punct == 1: buttons.append(summ)
                                if punct == 2: buttons.append(result)
                                if punct == 3: buttons.append(comment)

                        k = 0
                        if len(buttons) == 4: k = 5

                        while buttons != []:
                            if len(buttons) > 1:
                                markup.add(buttons[0], buttons[1])
                                buttons.remove(buttons[1])
                                buttons.remove(buttons[0])
                            else:
                                markup.add(buttons[0])
                                buttons.remove(buttons[0])

                        if k == 5: markup.add(enter2)

                    conn.commit()
                    bot.send_message(message.chat.id, Functions.text4(Functions.info2(message.chat.id, conn), message.from_user.id, conn),
                                     reply_markup=markup, parse_mode="Markdown")
        else:
            sql = "SELECT * FROM clients WHERE id=" + str(message.from_user.id)
            cursor.execute(sql)
            res = cursor.fetchall()
            sql = "SELECT * FROM users WHERE id=" + str(message.from_user.id)
            cursor.execute(sql)
            res2 = cursor.fetchall()
            if res == []:
                bot.send_message(message.chat.id, "*–ü—Ä–æ—á–∏—Ç–∞–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã—à–µ!*",
                                 parse_mode="Markdown")
            elif res2[0][2] == 0:
                bot.send_message(message.chat.id, "*–û–ø–ª–∞—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –µ—â—ë –æ–¥–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ.*",
                                 parse_mode="Markdown")
            else:
                punct = "None"
                if Functions.info(message.chat.id, conn) == 1: punct = "name"
                if Functions.info(message.chat.id, conn) == 2: punct = "count"
                if Functions.info(message.chat.id, conn) == 3: punct = "summ"
                if Functions.info(message.chat.id, conn) == 4: punct = "city"

                if punct != "None":

                    sql = """
                        UPDATE clients 
                        SET """ + punct + """ = '""" + str(message.text) + """' 
                        WHERE id = """ + str(message.from_user.id)

                    cursor.execute(sql)
                    conn.commit()
                markup = types.InlineKeyboardMarkup(row_width=2)
                if Functions.info(message.from_user.id, conn) == "None":
                    name = types.InlineKeyboardButton("üìù –ò–∑–º–µ–Ω–∏—Ç—å –¢–û–í–ê–†", callback_data='name')
                    count = types.InlineKeyboardButton("üìù –ò–∑–º–µ–Ω–∏—Ç—å –ö–û–õ–ò–ß–ï–°–¢–í–û", callback_data='count')
                    summ = types.InlineKeyboardButton("üìù –ò–∑–º–µ–Ω–∏—Ç—å –°–£–ú–ú–£", callback_data='summ')
                    city = types.InlineKeyboardButton("üìù –ò–∑–º–µ–Ω–∏—Ç—å –ì–û–†–û–î", callback_data="city")
                    enter = types.InlineKeyboardButton("üì¨ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ", callback_data="enter")
                    clear = types.InlineKeyboardButton("üóë –û—á–∏—Å—Ç–∏—Ç—å", callback_data="clear")


                    sql = "SELECT * FROM clients WHERE id=" + str(message.from_user.id)
                    cursor.execute(sql)
                    anketa = cursor.fetchall()

                    markup.add(clear)

                    buttons = []
                    for punct in range(len(anketa[0]) - 1):
                        if anketa[0][1 + punct] != "–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ":
                            if punct == 0: buttons.append(name)
                            if punct == 1: buttons.append(count)
                            if punct == 2: buttons.append(summ)
                            if punct == 3: buttons.append(city)


                    k = 0
                    if len(buttons) == 4: k = 5

                    while buttons != []:
                        if len(buttons) > 1:
                            markup.add(buttons[0], buttons[1])
                            buttons.remove(buttons[1])
                            buttons.remove(buttons[0])
                        else:
                            markup.add(buttons[0])
                            buttons.remove(buttons[0])

                    if k == 5: markup.add(enter)

                conn.commit()
                bot.send_message(message.chat.id, Functions.text(Functions.info(message.chat.id, conn), message.from_user.id, conn),
                                       reply_markup=markup, parse_mode="Markdown")

    else:
        if add_ == True:
            try:
                id = int(message.text)
                sql = "SELECT * FROM users WHERE id=" + str(id)
                cursor.execute(sql)
                res = cursor.fetchall()
                if res == []:
                    bot.send_message(message.chat.id, "*–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â—ë –Ω–µ –∑–∞–ø—É—Å–∫–∞–ª –±–æ—Ç–∞.\n\n–°–∫–∞–∂–∏—Ç–µ –µ–º—É, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞–ª —ç—Ç–æ!*",
                                     parse_mode="Markdown")
                else:
                    sql = "SELECT * FROM workers WHERE id=" + str(id)
                    cursor.execute(sql)
                    if cursor.fetchall() != []:
                        bot.send_message(message.chat.id, "*–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º!*",
                                         parse_mode="Markdown")
                    else:
                        albums = [id, 0, 0, 0]
                        sql = sq.SQL('INSERT INTO workers (id, balance, zakas, warns) VALUES ({})').format(
                            sq.SQL(',').join(map(sq.Literal, albums)))
                        cursor.execute(sql)
                        conn.commit()
                        bot.unban_chat_member(channel, id)
                        albums = [id, "–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ", "–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ", "–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ", "–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ"]
                        sql = sq.SQL('INSERT INTO work (id, zakaz, summ, result, comment) VALUES ({})').format(
                            sq.SQL(',').join(map(sq.Literal, albums)))
                        cursor.execute(sql)
                        conn.commit()
                        bot.send_message(id, "*‚úÖ –í–∞—Å –ø—Ä–∏–Ω—è–ª–∏ –≤ –∫–æ–º–∞–Ω–¥—É –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π!*\n\n_–ù–∞—à –∫–∞–Ω–∞–ª —Å –∑–∞–∫–∞–∑–∞–º–∏, –ø–µ—Ä–µ—Ö–æ–¥–∏ —Å–∫–æ—Ä–µ–µ:_\n" + invite, parse_mode="Markdown", reply_markup=Functions.list())
                        bot.send_message(id, "*–ß–¢–û–ë–´ –í–´–ü–û–õ–ù–ò–¢–¨ –ó–ê–ö–ê–ó, –ù–ê–ü–ò–®–ò–¢–ï –ú–ù–ï –ï–ì–û –ù–û–ú–ï–†*", parse_mode="Markdown")
                        bot.send_message(message.chat.id, "*–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ–º–∞–Ω–¥—É –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π!*",
                                         parse_mode="Markdown")
            except:
                bot.send_message(message.chat.id, "*–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.*", parse_mode="Markdown")
            add_ = False
            panel(message.chat.id)
        elif remove_ == True:
            try:
                id = int(message.text)
                sql = "SELECT * FROM workers WHERE id=" + str(id)
                cursor.execute(sql)
                if cursor.fetchall() == []:
                    bot.send_message(message.chat.id, "*–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º id –Ω–µ—Ç.*",
                                     parse_mode="Markdown")
                else:
                    sql = "DELETE FROM workers WHERE id=" + str(id)
                    cursor.execute(sql)
                    conn.commit()
                    bot.kick_chat_member(channel, id)
                    sql = "DELETE FROM work WHERE id=" + str(id)
                    cursor.execute(sql)
                    conn.commit()
                    bot.send_message(id,
                                     "*‚ùå –í–∞—Å –∏—Å–∫–ª—é—á–∏–ª–∏ –∏–∑ –∫–æ–º–∞–Ω–¥—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π!*\n\n_–ù–∞–º –æ—á–µ–Ω—å –∂–∞–ª—å._",
                                     parse_mode="Markdown", reply_markup=types.ReplyKeyboardRemove())
                    bot.send_message(message.chat.id, "*–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∏—Å–∫–ª—é—á—ë–Ω –∏–∑ –∫–æ–º–∞–Ω–¥—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π!*",
                                     parse_mode="Markdown")
            except:
                bot.send_message(message.chat.id, "*–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.*", parse_mode="Markdown")
            add_ = False
            panel(message.chat.id)
        else:
            bot.send_message(message.chat.id, "*–í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫.*",
                             parse_mode="Markdown")

    conn.close()


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    global add_, remove_
    conn = Functions.connect()
    cursor = conn.cursor()
    cid = call.from_user.id
    if cid != admin:
        if call.data == "customer" or call.data == "executor":
            if call.data == "customer":
                sql = "SELECT * FROM clients WHERE id=" + str(cid)
                cursor.execute(sql)
                check = cursor.fetchall()
                if check == []:
                    albums = [int(cid), "–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ", "–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ", "–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ", "–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ"]
                    sql = sq.SQL('INSERT INTO clients (id, name, count, summ, city) VALUES ({})').format(
                        sq.SQL(',').join(map(sq.Literal, albums)))
                    cursor.execute(sql)
                conn.commit()
                sql = """
                    UPDATE users
                    SET type = '–∑–∞–∫–∞–∑—á–∏–∫' 
                    WHERE id = """ + str(cid)
                cursor.execute(sql)
                conn.commit()
                bot.send_message(call.message.chat.id, "*–û—Ç–ª–∏—á–Ω–æ!* –¢–µ–ø–µ—Ä—å –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, –æ—Ç–≤–µ—á–∞—è –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã!", parse_mode="Markdown")
                bot.send_message(call.message.chat.id, Functions.text(Functions.info(cid, conn), cid, conn), parse_mode="Markdown")
            if call.data == "executor":
                sql = """
                    UPDATE users 
                    SET type = '–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å' 
                    WHERE id = """ + str(cid)
                cursor.execute(sql)
                conn.commit()
                bot.send_message(call.message.chat.id, "*–û—Ç–ª–∏—á–Ω–æ!* _–¢–æ–≥–¥–∞ –ø—Ä–æ—Å–∏–º –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –¥–∞–Ω–Ω–æ–º—É —á–µ–ª–æ–≤–µ–∫—É:_\n\n*–°–µ—Ä–≥–µ–π - t.me/—Å—Å—ã–ª–∫–∞*\n\n*–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–º—É –≤–∞—à id!*\n_–í–∞—à id:_ " + str(cid), parse_mode="Markdown")
            bot.delete_message(call.message.chat.id, call.message.message_id)
        elif call.data == "new":
            sql = "SELECT * FROM zakaz WHERE id=" + str(cid)
            cursor.execute(sql)
            if len(cursor.fetchall()) == 1:
                bot.send_message(call.message.chat.id, "‚ÄºÔ∏è*–í—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ —Å–≤–æ—é –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –ø–æ–ø—ã—Ç–∫—É.*\n\n–ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –±–æ–ª–µ–µ 1 –æ–±—ä—è–≤–ª–µ–Ω–∏—è, –æ–ø–ª–∞—Ç–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–ª–∏ –∫—É–ø–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –Ω–µ–¥–µ–ª—é.\n\n_–í –¥–æ—Ä–∞–±–æ—Ç–∫–µ..._", parse_mode="Markdown")
            else:
                bot.send_message(call.message.chat.id, "_–í –¥–æ—Ä–∞–±–æ—Ç–∫–µ_", parse_mode="Markdown")
        elif call.data == "allow":
            bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
            bot.send_message(call.message.chat.id, "*–í—ã –ø—Ä–∏–Ω—è–ª–∏ —Ä–∞–±–æ—Ç—É –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π!*\n\n–ù–∞–¥–µ–µ–º—Å—è, –≤–∞–º –≤—Å—ë –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å.", parse_mode="Markdown")
        elif call.data == "deny":
            markup = types.InlineKeyboardMarkup(row_width=1)
            allow = types.InlineKeyboardButton("‚ùó –ü–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è", callback_data='report')
            deny = types.InlineKeyboardButton("‚ùì –î—Ä—É–≥–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–∞–∑–∞", callback_data='question')
            back = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back')
            markup.add(allow, deny, back)
            bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=markup)
        elif call.data == "report":
            markup = types.InlineKeyboardMarkup(row_width=3)
            aa = types.InlineKeyboardButton("–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å ‚Ññ1", callback_data='ispoln')
            aaa = types.InlineKeyboardButton("–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å ‚Ññ2", callback_data='ispoln')
            aaaa = types.InlineKeyboardButton("–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å ‚Ññ3", callback_data='ispoln')
            back2 = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back2')
            markup.add(aa, aaa, aaaa, back2)
            bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=markup)
        elif call.data == "ispoln":
            markup = types.InlineKeyboardMarkup(row_width=2)
            rsum = types.InlineKeyboardButton("–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞", callback_data='rsum')
            rlink = types.InlineKeyboardButton("–ù–µ—Ä–∞–±–æ—á–∏–µ —Å—Å—ã–ª–∫–∏", callback_data='rlink')
            rmes = types.InlineKeyboardButton("–ë—Ä–µ–¥ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏", callback_data='rmes')
            rall = types.InlineKeyboardButton("–ó–∞–∫–∞–∑ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω", callback_data='rall')
            back3 = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back3')
            markup.add(rsum, rlink, rmes, rall, back3)
            bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=markup)
        elif call.data == "back3":
            markup = types.InlineKeyboardMarkup(row_width=3)
            aa = types.InlineKeyboardButton("–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å ‚Ññ1", callback_data='ispoln')
            aaa = types.InlineKeyboardButton("–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å ‚Ññ2", callback_data='ispoln')
            aaaa = types.InlineKeyboardButton("–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å ‚Ññ3", callback_data='ispoln')
            back2 = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back2')
            markup.add(aa, aaa, aaaa, back2)
            bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=markup)
        elif call.data == "question":
            bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
            bot.send_message(call.message.chat.id, "*–í –¥–æ—Ä–∞–±–æ—Ç–∫–µ!*\n\n–ü–æ–∫–∞ —á—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç..", parse_mode="Markdown")
        elif call.data == "back":
            markup = types.InlineKeyboardMarkup(row_width=2)
            allow = types.InlineKeyboardButton("‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data='allow')
            deny = types.InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data='deny')
            markup.add(allow, deny)
            bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=markup)
        elif call.data == "back2":
            markup = types.InlineKeyboardMarkup(row_width=1)
            allow = types.InlineKeyboardButton("‚ùó –ü–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è", callback_data='report')
            deny = types.InlineKeyboardButton("‚ùì –î—Ä—É–≥–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–∞–∑–∞", callback_data='question')
            back = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back')
            markup.add(allow, deny, back)
            bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=markup)
        elif call.data == "enter" or call.data == "enter2":
            sql = "SELECT * FROM workers WHERE id=" + str(cid)
            cursor.execute(sql)
            if cursor.fetchall() != [] and call.data == "enter2":
                sql = "SELECT * FROM work WHERE id=" + str(cid)
                cursor.execute(sql)
                albums = cursor.fetchall()[0]
                albums2 = []
                for i in range(5):
                    albums2.append(albums[i])
                for i in range(2):
                    albums2.append(False)
                sql = """
                                                        UPDATE work 
                                                        SET zakaz = '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ',
                                                        summ = '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ', 
                                                        result = '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ', 
                                                        comment = '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ' 
                                                        WHERE id = """ + str(cid)

                cursor.execute(sql)
                conn.commit()
                sql = sq.SQL('INSERT INTO made (id, zakaz, summ, result, comment, truth, agree) VALUES ({})').format(
                    sq.SQL(',').join(map(sq.Literal, albums2)))
                cursor.execute(sql)
                conn.commit()
                sql = "SELECT * FROM zakaz"
                cursor.execute(sql)
                res_ = cursor.fetchall()[int(albums2[1]) - 1]
                id = int(res_[0])
                endrs = int(res_[6])
                sql = """
                                                         UPDATE zakaz 
                                                         SET enders = """+str(endrs+1)+"""
                                                         WHERE id = """ + str(id)
                cursor.execute(sql)
                conn.commit()
                bot.send_message(id, "*–í–∞—à –∑–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–∏–ª –æ–¥–∏–Ω –∏–∑ –Ω–∞—à–∏—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π.*", parse_mode="Markdown")
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text=Functions.text5(cid, conn), parse_mode="Markdown")
                bot.send_message(call.message.chat.id,
                                 "*–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –∑–∞–∫–∞–∑! –¢–µ–ø–µ—Ä—å –æ–∂–∏–¥–∞–π—Ç–µ, –ø–æ–∫–∞ –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç —Å–∞–º –∑–∞–∫–∞–∑—á–∏–∫. –ú—ã —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å.*\n\n–í—ã –ø–æ–∫–∞ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–∫–∞–∑–∞.",
                                 parse_mode="Markdown")
                bot.send_message(call.message.chat.id, "*–ù–ê–ü–ò–®–ò–¢–ï –ù–û–ú–ï–† –ó–ê–ö–ê–ó–ê, –ö–û–¢–û–†–´–ô –•–û–¢–ò–¢–ï –í–´–ü–û–õ–ù–ò–¢–¨*", parse_mode="Markdown")
                if endrs+1 == 3:
                    markup = types.InlineKeyboardMarkup(row_width=2)
                    allow = types.InlineKeyboardButton("‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data='allow')
                    deny = types.InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data='deny')
                    markup.add(allow, deny)
                    bot.send_message(id, Functions.ready(int(albums2[1]), conn), parse_mode="Markdown", reply_markup=markup)

            elif call.data == "enter":
                sql = "SELECT * FROM users WHERE id=" + str(cid)
                cursor.execute(sql)
                res2 = cursor.fetchall()
                if res2 != []:
                    if res2[0][2] == 0:
                        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=Functions.text(Functions.info(cid, conn), cid, conn), parse_mode="Markdown")
                    else:
                        sql = "SELECT * FROM clients WHERE id=" + str(cid)
                        cursor.execute(sql)
                        albums = cursor.fetchall()[0]
                        albums2 = []
                        for i in range(5):
                            albums2.append(albums[i])
                        for i in range(2):
                            albums2.append("0")
                        sql = """
                                                UPDATE clients
                                                SET name = '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ',
                                                count = '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ', 
                                                summ = '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ', 
                                                city = '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ' 
                                                WHERE id = """ + str(cid)

                        cursor.execute(sql)
                        conn.commit()
                        sql = sq.SQL(
                            'INSERT INTO zakaz (id, name, count, summ, city, takers, enders) VALUES ({})').format(
                            sq.SQL(',').join(map(sq.Literal, albums2)))
                        cursor.execute(sql)
                        conn.commit()
                        sql = """
                            UPDATE users
                            SET anketa = 0
                            WHERE id =""" + str(cid)
                        cursor.execute(sql)
                        conn.commit()
                        markup = types.InlineKeyboardMarkup(row_width=1)
                        new = types.InlineKeyboardButton("‚ú≥ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ", callback_data="new")
                        markup.add(new)
                        bot.send_message(channel, Functions.text3(conn), parse_mode="Markdown")
                        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=Functions.text2(cid, conn), parse_mode="Markdown")
                        bot.send_message(call.message.chat.id, "*–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à—É –∑–∞—è–≤–∫—É. –û–∂–∏–¥–∞–π—Ç–µ, —Å–∫–æ—Ä–æ –º—ã –ø—Ä–∏—à–ª—ë–º –≤–∞–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã.*\n\n_–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å –µ—â—ë –æ–¥–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É._", reply_markup=markup, parse_mode="Markdown")
        else:
            sql = "SELECT * FROM workers WHERE id=" + str(cid)
            cursor.execute(sql)
            if cursor.fetchall() != []:
                try:
                    if call.data == "clear2":
                        sql = """
                                                UPDATE work
                                                SET zakaz = '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ',
                                                summ = '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ', 
                                                result = '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ', 
                                                comment = '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ' 
                                                WHERE id = """ + str(cid)

                        cursor.execute(sql)
                        conn.commit()
                    else:
                        sql = """
                                    UPDATE work
                                    SET """ + str(call.data) + """ = '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ' 
                                    WHERE id = """ + str(cid)

                        cursor.execute(sql)
                        conn.commit()

                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text=Functions.text4(Functions.info2(cid, conn), cid, conn), parse_mode="Markdown")
                except:
                    exc = True


            else:
                try:
                    if call.data == "clear":
                        sql = """
                                                UPDATE clients
                                                SET name = '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ',
                                                count = '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ', 
                                                summ = '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ', 
                                                city = '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ' 
                                                WHERE id = """ + str(cid)

                        cursor.execute(sql)
                        conn.commit()
                    else:
                        sql = """
                                    UPDATE clients 
                                    SET """ + str(call.data) + """ = '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ' 
                                    WHERE id = """ + str(cid)

                        cursor.execute(sql)
                        conn.commit()


                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=Functions.text(Functions.info(cid, conn), cid, conn), parse_mode="Markdown")
                except:
                    exc = True

    else:
        if call.data == "a_list":
            sql = "SELECT * FROM workers"
            cursor.execute(sql)
            list = cursor.fetchall()
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="–í—ã –≤—ã–±—Ä–∞–ª–∏: _–°–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π_ üìÉ", parse_mode="Markdown")
            if list == []:
                bot.send_message(call.message.chat.id, "*–£ –≤–∞—Å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.*", parse_mode="Markdown")
            else:
                mes = "„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è"
                for worker in list:
                    mes += "\nid: *" + str(worker[0]) + "*"
                    mes += "\n–ë–∞–ª–∞–Ω—Å: " + str(worker[1])
                    mes += "\n–ö–æ–ª-–≤–æ –∑–∞–∫–∞–∑–æ–≤: " + str(worker[2])
                    mes += "\n–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: " + str(worker[3])
                    mes += "\n„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è"
                bot.send_message(call.message.chat.id, mes, parse_mode="Markdown")
            panel(call.message.chat.id)
        if call.data == "a_add":
            add_ = True
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–í—ã –≤—ã–±—Ä–∞–ª–∏: _–î–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è_ ‚úÖ", parse_mode="Markdown")
            bot.send_message(call.message.chat.id, "*–ù–∞–ø–∏—à–∏—Ç–µ id –Ω–æ–≤–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.*\n\n–ù–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –¥—Ä—É–≥–æ–µ, —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É.", parse_mode="Markdown")
        if call.data == "a_remove":
            remove_ = True
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="–í—ã –≤—ã–±—Ä–∞–ª–∏: _–ò—Å–∫–ª—é—á–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è_ ‚ùå", parse_mode="Markdown")
            bot.send_message(call.message.chat.id, "*–ù–∞–ø–∏—à–∏—Ç–µ id –∏—Å–∫–ª—é—á–∞–µ–º–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.*\n\n–ù–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –¥—Ä—É–≥–æ–µ, —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É.",
                             parse_mode="Markdown")
        if call.data == "a_zakazs":
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="–í—ã –≤—ã–±—Ä–∞–ª–∏: _–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤_ üìã", parse_mode="Markdown")
            bot.send_message(call.message.chat.id, Functions.zakazs(True, 0, conn), parse_mode="Markdown")
            panel(call.message.chat.id)
    conn.close()





print("Bot start")
bot.polling(none_stop=True, timeout=123)
